---
title: "Dynamic documents in R"
subtitle: "Making tables in R Markdown"
date: "`r Sys.Date()`"
format: "kakashi-revealjs"
---

```{r}
#| label: setup
#| include: false
options(htmltools.dir.version = FALSE, tibble.max_extra_cols = 6, tibble.width = 60)
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.align = "center", dpi = 320)
library(tidyverse)
library(gapminder)
library(here)
library(knitr)
library(broom)
library(gtsummary)
diabetes <- read_csv("diabetes.csv")
# create table_data
table_data <- diabetes |>
  mutate(
    # create diabetic category based on A1c
    diabetic = case_when(
      glyhb >= 6.5 ~ "Diabetic", glyhb < 6.5 ~ "Healthy",
      NA ~ NA_character_
    ),
    # calculate bmi
    bmi = (weight / height^2) * 703
  )
model_data <- diabetes |> mutate(bmi = (weight / height^2) * 703)
```

## *Working with descriptive tables*

. . .

```{r}
#| label: descriptives
descriptives <- diabetes |> #<<
  filter(!is.na(glyhb)) |>
  mutate(
    diabetic = case_when(
      glyhb >= 6.5 ~ "Diabetic", 
      glyhb < 6.5 ~ "Healthy",
      NA ~ NA_character_
    ),
    bmi = (weight / height^2) * 703
  ) |>
  group_by(diabetic) |> #<<
  summarise(n = n(), across(c(glyhb, bmi, age), mean, na.rm = TRUE)) #<<
```

. . .

## *Descriptive statistics table*

### Standard `tibble` display 

```{r}
#| label: view-descriptives
descriptives
```

. . .

## *Descriptive statistics table*

### ~~Standard `tibble` display~~

```{r}
#| label: view-descriptives2
descriptives
```

### *Useful in console, but less so for reports or presentation*

. . .

# Visual R Markdown tables

. . .

```{r}
#| label: vme-insert-table.png
#| echo: false
#| out.width: 30%
knitr::include_graphics("img/vme-insert-table.png")
```

. . .

# Visual R Markdown tables

```{r}
#| label: vme-table-options.png
#| echo: false
#| out.width: 70%
knitr::include_graphics("img/vme-table-options.png")
```

. . .

## Your turn 1

###  Using Visual R Markdown, create a markdown table that represents these data: 

### The Physicians' Health Study enrolled over 22,000 male physicians to study the effect of low-dose aspirin on myocardial infarctions (heart attacks). Of those who took aspirin, 129 had heart attacks, while 10,898 did not. Of those who took the placebo, 239 had heart attacks and 10,795 did not.

. . .

background-image: url(img/knitr.png)
background-position: 93% 10%
background-size: 15%


# `knitr::kable()`

<br>

### `kable()` creates formatted tables from rectangular objects (data.frames, matrices, and tibbles)

. . .

```{r}
kable(descriptives)
```

. . .

#### Formats include `pipe` ('`|`'), HTML (`html`), LaTeX (`latex`), and reStructuredText (`rst`)

. . .

## *`kable()`: underlying structure*

### Simple and pipe work in most output document formats

```{r}
#| label: kable-simple
#| eval: false
knitr::kable(x = descriptives, format = "simple")
diabetic      n      glyhb        bmi        age
. . .. . .. . .. . .  . . .. . .  . . .. . .. . .. . .  . . .. . .. . .. . .  . . .. . .. . .. . . #<<
Diabetic     65   9.886615   30.80235   58.43077
Healthy     325   4.730400   28.38114   44.44308
```

```{r}
#| label: kable-pipe
#| eval: false
knitr::kable(x = descriptives, format = "pipe")
|diabetic |   n|    glyhb|      bmi|      age|
|:. . .. . .. . .. . .|. . .:|. . .. . .. . .. . .:|. . .. . .. . .. . .:|. . .. . .. . .. . .:| #<<
|Diabetic |  65| 9.886615| 30.80235| 58.43077|
|Healthy  | 325| 4.730400| 28.38114| 44.44308|
```

. . .

## *`kable()` options: column names*

<br>

### Supply a vector of new names with `col.names` argument

```{r}
#| eval: false
kable(descriptives,
  col.names = c("Diabetes Status", "N", "A1c", "BMI", "Age") #<<
)
```

. . .

```{r}
#| echo: false
kable(descriptives,
  col.names = c("Diabetes Status", "N", "A1c", "BMI", "Age") #<<
)
```

. . .

## *`kable()` options: number format*

<br>

### Use `digits` for decimal place 

<br>

```{r}
#| label: kable-digits
#| eval: false
kable(descriptives,
  digits = 1 #<<
)
```

. . .

```{r}
#| echo: false
kable(descriptives, digits = 1)
```

. . .

## *`kable()` options: add caption*

<br>

### Add caption with `caption` argument

```{r}
#| eval: false
kable(descriptives,
  caption = "Descriptive statistics" #<<
)
```

. . .

```{r}
#| label: kable-caption.png
#| echo: false
#| out.width: 90%
knitr::include_graphics("img/kable-caption.png")
```

. . .



## Your turn 2

#### Using the `tidy()` function from `broom`, turn `response_model` and `marker_model` into dataframes, binding them together with `bind_rows()`
#### Turn the resulting dataframe into a table using `kable()`
#### Set the `eval` chunk option to `TRUE` 
#### Knit

```{r}
response_model <- glm(response ~ age + stage, data = trial, 
                      family = binomial)
marker_model <- lm(marker ~ trt + stage + age, data = trial)
```

. . .


### Your turn 2

```{r}
models <- bind_rows(tidy(response_model), tidy(marker_model))
kable(models)
```

. . .
background-image: url(img/gtsummary.png)
background-position: 93% 10%
background-size: 20%

# *gtsummary*

<br><br>

. . .

## Create publication-ready analytic and summary tables


. . .

## Good support for wide variety of output formats

. . .

## Built on the larger [`gt` package](https://gt.rstudio.com/index.html) 

. . .

# `tbl_cross()`

### Creates a **cross-tabulation** of two categorical variables

. . .

```{r}
#| eval: false
library(gtsummary)
tbl_cross(
  data,
  row = x,
  col = y
)
```

. . .

# `tbl_cross()`

```{r}
table_data <- diabetes |> #<<
  mutate(
    # create diabetic category based on A1c and calculate bmi
    diabetic = case_when( #<<
      glyhb >= 6.5 ~ "Diabetic", 
      glyhb < 6.5 ~ "Healthy",
      NA ~ NA_character_
    ), bmi = (weight / height^2) * 703
  ) |>
  select(diabetic, age, gender, bmi) #<<
```

. . .

# `tbl_cross()`

```{r}
#| eval: false
tbl_cross(table_data, row = diabetic, col = gender) #<<
```

. . .

# `tbl_cross()`

```{r}
tbl_cross(table_data, row = diabetic, col = gender)
```

. . .

## `tbl_cross()` output

```{r}
#| label: tbl_cross.png
#| echo: false
#| out.weight: 100%
knitr::include_graphics("img/tbl_cross.png")
```

. . .

## *`tbl_cross()`: variable names*

### `gtsummary` uses the [`labelled` package](https://larmarange.github.io/labelled/index.html) to create labels

. . .

```{r}
#| label: label-vars
#| eval: false
library(labelled) 
var_label(table_data$diabetic) <- "Diabetes Status" #<<
var_label(table_data$diabetic)
```

. . .

## *`tbl_cross()`: variable names*

### `gtsummary` uses the [`labelled` package](https://larmarange.github.io/labelled/index.html) to create labels

```{r}
#| label: label-vars2
#| highlight.output: 1.0
library(labelled) 
var_label(table_data$diabetic) <- "Diabetes Status"
var_label(table_data$diabetic) #<<
```

. . .


## *`tbl_cross()`: variable names*

### Set multiple variable lables with `list()`

```{r}
#| label: tbl_cross-var_label-mult
var_label(table_data) <- list( 
  gender = "Gender",
  diabetic = "Diabetes Status"
) 
```

. . .

## *`tbl_cross()`: variable names*

```{r}
tbl_cross(table_data, diabetic, gender)
```

. . .

## Your turn 3

###  Create a contingency table of `trial` (a dataset from gtsummary) using `tbl_cross()`: set `trt` to the rows and `response` to the columns.
###  Add a p-value with `add_p()`
###  Knit

. . .

# Your turn 3

```{r}
trial |>
  tbl_cross(row = trt, col = response) |>
  add_p()
```

. . .

## `tbl_summary()`

. . .

## *Calculates descriptive statistics *

. . .

## `tbl_summary()`

## ~~Calculates descriptive statistics~~
## *Can split calculations by groups (i.e. categorical or dichotomous variables)*
. . .

## `tbl_summary()`

## ~~Calculates descriptive statistics~~
## ~~Can split calculations by groups (i.e. categorical or dichotomous variables)~~
## *Sensible defaults; easily customized*

. . .

## `tbl_summary()`: basic use

```{r}
#| label: baisc-tbl_summary
#| message: false
#| warning: false
#| eval: false
var_label(table_data) <- list( 
  gender = "Gender",
  diabetic = "Diabetes Status",
  age = "Age",
  bmi = "BMI"
)

tbl_summary(table_data) #<<
```

. . .

## `tbl_summary()`: basic use

```{r}
#| label: baisc-tbl_summary2
#| message: false
#| warning: false
#| echo: false
var_label(table_data) <- list( 
  gender = "Gender",
  diabetic = "Diabetes Status",
  age = "Age",
  bmi = "BMI"
)

tbl_summary(table_data)
```

. . .


## `tbl_summary()`: basic use

:::: {.columns}
::: {.column width="50%"}

### Automatically adds header: 

### - *Characteristic* = variable

### - *N* = `nrow(diabetes)`

:::

::: {.column width="50%"}

```{r}
#| label: tbl_summary-header.png
#| out.width: 55%
#| fig.align: center
#| echo: false
knitr::include_graphics("img/tbl_summary-header.png")
```

:::
::::

. . .


## `tbl_summary()`: basic use

:::: {.columns}
::: {.column width="50%"}

<br><br>

### Missing = *Unknown* 

:::

::: {.column width="50%"}

```{r}
#| label: tbl_summary-missing.png
#| out.width: 55%
#| echo: false
knitr::include_graphics("img/tbl_summary-missing.png")
```

:::
::::

. . .


## `tbl_summary()`: basic use

:::: {.columns}
::: {.column width="50%"}

### Source note lists summary statistics:

### - *n(%)* = `!is.na(var)`/403

### - *Median* = `median(var)` 

### - *IQR* = `IQR(var)`

:::

::: {.column width="50%"}

```{r}
#| label: tbl_summary-footnote.png
#| out.width: 55%
#| echo: false
knitr::include_graphics("img/tbl_summary-footnote.png")
```

:::
::::

. . .

## `tbl_summary()`: variable levels

:::: {.columns}
::: {.column width="50%"}

#### Variable levels are indented 

```{r}
#| label: table-diabetic
table(table_data$diabetic)
table(table_data$gender)
```

:::

::: {.column width="50%"}

```{r}
#| label: tbl_summary-levels.png
#| out.width: 60%
#| echo: false
knitr::include_graphics("img/tbl_summary-levels.png")
```

:::
::::

. . .

## `tbl_summary()`: split by groups

### Split the summary table by a grouping variable

```{r}
#| label: tbl_summary-by
#| eval: false
table_data |>
  select(diabetic, age, gender, bmi) |>
  tbl_summary(by = diabetic) #<<
```

. . .

```{r}
#| label: tbl_summary-by.png
#| out.width: 40%
#| echo: false
knitr::include_graphics("img/tbl_summary-by.png")
```

. . .


## `tbl_summary()`: digits

#### Change number formats with `digits`

```{r}
#| label: digits
#| eval: false
table_data |>
  select(diabetic, age, gender, bmi) |>
  tbl_summary(
    by = diabetic,
    digits = all_continuous() ~ 1 #<<
  )
```

. . .

```{r}
#| label: tbl_summary-digits.png
#| out.width: 43%
#| echo: false
knitr::include_graphics("img/tbl_summary-digits.png")
```

. . .

## `tbl_summary()`: missing_text

#### Rename missing value label with `missing_text`

```{r}
#| label: missing_text
#| eval: false
table_data |>
  select(diabetic, age, gender, bmi) |>
  tbl_summary(
    by = diabetic,
    missing_text = "(Missing)" #<<
  )
```

. . .

```{r}
#| label: tbl_summary-missing_text.png
#| out.width: 43%
#| echo: false
knitr::include_graphics("img/tbl_summary-missing_text.png")
```

. . .

## `tbl_summary()`: tests & p-values

#### Add tests and p-values (with one function!)

```{r}
#| label: add_p
#| eval: false
table_data |>
  select(diabetic, age, gender, bmi) |>
  tbl_summary(by = diabetic) |>
  add_p() #<<
```

. . .

```{r}
#| label: tbl_summary-add_p.png
#| out.width: 45%
#| echo: false
knitr::include_graphics("img/tbl_summary-add_p.png")
```

. . .

## `tbl_summary()`: statistic

```{r}
#| eval: false
tbl_summary(
  table_data,
  statistic = list(all_continuous() ~ "{mean} ({sd})") #<<
)
```

## Supply **`statistic`** arguments in **`list()`** (separate with **`~`**)

. . .

## `tbl_summary()`: statistic

```{r}
#| eval: false
tbl_summary(
  table_data,
  statistic = list(all_continuous() ~ "{mean} ({sd})") #<<
)
```

## Access variables by name or type (**`all_continuous()`**, **`all_categorical()`**, **`all_dichotomous()`**, etc.)

. . .

## `tbl_summary()`: statistic

```{r}
#| eval: false
tbl_summary(
  table_data,
  statistic = list(all_continuous() ~ "{mean} ({sd})") #<<
)
```

## Access statistic with curly brackets (i.e. **`{mean}`**, **`{sd}`**, etc.). See **`?tbl_summary`** for options

. . .

## `tbl_summary()`: statistic

```{r}
#| echo: false
tbl_summary(
  table_data,
  statistic = list(all_continuous() ~ "{mean} ({sd})")
)
```

. . .

# Add other elements to table

```{r}
#| echo: false
tibble::tribble(
  ~Function,             ~Description,
  "`add_p()`",           "add p-values to the output comparing values across groups",
  "`add_overall()`",     "add a column with overall summary statistics",
  "`add_n()`",           "add a column with N (or N missing) for each variable",
  "`add_difference()`",  "add column for difference between two group, confidence interval, and p-value",
  "`add_stat_label()`",  "add label for the summary statistics shown in each row",
  "`add_stat()`",        "generic function to add a column with user-defined values",
  "`add_q()`",           "add a column of q values to control for multiple comparisons"
) |>
  gt::gt() |>
  gt::fmt_markdown(columns = Function)
```

. . .

# gtsummary functions to format table

```{r}
#| echo: false
tibble::tribble(
  ~Function,                     ~Description,
  "`modify_header()`",           "update column headers",   
  "`modify_footnote()`",         "update column footnote",   
  "`modify_spanning_header()`",  "update spanning headers",   
  "`modify_caption()`",          "update table caption/title",   
  "`bold_labels()`",             "bold variable labels",  
  "`bold_levels()`",             "bold variable levels",  
  "`italicize_labels()`",        "italicize variable labels",  
  "`italicize_levels()`",        "italicize variable levels",  
  "`bold_p()`",                  "bold significant p-values"
) |>
  gt::gt() |>
  gt::fmt_markdown(columns = Function)
```

. . .

## Your Turn 4

#### Create a summary table of `trial` by the `trt` variable.

#### Modify the label for `grade` to say "Tumor Grade"

#### Add an overall column and a p-value

#### Modify the table to use Mean (SD) and n (%) via the `statistic` argument: `list(all_continuous() ~ "{mean} ({sd})", all_categorical() ~ "{n} ({p}%)")`

#### Bold the labels

####  Modify the header with `modify_spanning_header(c("stat_1", "stat_2") ~ "**Treatment Received**")`

. . .


## Your Turn 4

```{r}
#| label: table-one
#| eval: false
trial |>
  tbl_summary(
    by = trt,
    label = grade ~ "Tumor Grade",
    statistic = list(
      all_continuous() ~ "{mean} ({sd})",
      all_categorical() ~ "{n} ({p}%)"
    )
  ) |>
  bold_labels() |>
  modify_spanning_header(
    c("stat_1", "stat_2") ~ "**Treatment Received**"
  ) |>
  add_overall() |>
  add_p()
```

. . .


## Your Turn 4

```{r}
#| label: your-turn-4.png
#| echo: false
#| out.width: 60%
knitr::include_graphics("img/your-turn-4.png")
```


. . .

## Other `tbl_summary()` arguments

### See the other options with *`?tbl_summary()`*

```{r}
#| label: tbl_summary-args
#| echo: false
tibble::tribble(
  ~Argument, ~Description,
  "`label`", "specify the variable labels printed in table",
  "`type`", "specify the variable type (e.g. continuous, categorical, etc.)",
  "`statistic`", "change the summary statistics presented",
  "`digits`", "number of digits the summary statistics will be rounded to",
  "`missing`", "whether to display a row with the number of missing observations",
  "`missing_text`", "text label for the missing number row",
  "`sort`", "change the sorting of categorical levels by frequency",
  "`percent`", "print column, row, or cell percentages",
  "`include`", "list of variables to include in summary table"
) |>
  gt::gt() |>
  gt::fmt_markdown(columns = Argument)
```

. . .

# `tbl_regression()`

. . .

```{r}
#| label: mod-tbl_regression
#| eval: false
model_data <- diabetes |> mutate(bmi = (weight / height^2) * 703)
glyhb_model <- lm(glyhb ~ bmi + age, data = model_data) #<<
tbl_regression(glyhb_model) #<<
```

. . .

# `tbl_regression()`

```{r}
#| label: mod-tbl_regression2
model_data <- diabetes |> mutate(bmi = (weight / height^2) * 703)
glyhb_model <- lm(glyhb ~ bmi + age, data = model_data)
tbl_regression(glyhb_model)
```

. . .

## `tbl_regression()`: variable labels

### *Add labels just like `tbl_summary()`*

```{r}
#| label: tbl_regression-var_label
#| eval: false
var_label(model_data) <- list( #<<
  bmi = "BMI", #<<
  glyhb = "A1c", #<<
  age = "Age"#<<
) #<<
glyhb_model <- lm(glyhb ~ bmi + age, data = model_data)
tbl_regression(glyhb_model)
```

. . .

## `tbl_regression()`: variable labels

### *Add labels just like `tbl_summary()`*

```{r}
#| label: tbl_regression-var_label2
var_label(model_data) <- list(
  bmi = "BMI", 
  glyhb = "A1c", 
  age = "Age"
)
glyhb_model <- lm(glyhb ~ bmi + age, data = model_data)
tbl_regression(glyhb_model)
```

. . .


## `tbl_regression()`: other options

```{r}
#| label: tbl_regression-options
#| echo: false
tibble::tribble(
  ~Argument, ~Description,
  "`label`", "modify variable labels in table",
  "`exponentiate`", "exponentiate model coefficients",
  "`include`", "names of variables to include in output. Default is all variables",
  "`show_single_row`", "By default, categorical variables are printed on multiple rows. If a variable is dichotomous and you wish to print the regression coefficient on a single row, include the variable name(s) here.",
  "`conf.level`", "confidence level of confidence interval",
  "`intercept`", "indicates whether to include the intercept",
  "`estimate_fun`", "function to round and format coefficient estimates",
  "`pvalue_fun`", "function to round and format p-values",
  "`tidy_fun`", "function to specify/customize tidier function"
) |>
  gt::gt() |>
  gt::fmt_markdown(columns = c(Argument))
```


. . .

## `tbl_regression()`: Model statistics

### Add model statistics from `broom::glance()`

```{r}
#| label: add_glance_source_note
#| eval: false
tbl_regression(glyhb_model) |> 
  add_glance_source_note() #<<
```

. . .

## `tbl_regression()`: Model statistics

### Add model statistics from `broom::glance()`

```{r}
#| label: add_glance_source_note2
tbl_regression(glyhb_model) |> 
  add_glance_source_note() 
```

. . .

## `tbl_regression()`: other add options

```{r}
#| label: other-add-options
#| echo: false
tibble::tribble(
  ~Function, ~Description,
  "`add_global_p()`", "adds the global p-value for a categorical variables",
  "`add_glance_source_note()`", "adds statistics from `glance()` as source note",
  "`add_vif()`", "adds column of the variance inflation factors (VIF)",
  "`add_q()`", "add a column of q values to control for multiple comparisons"
) |>
  gt::gt() |>
  gt::fmt_markdown(columns = everything())
```

. . .

## `tbl_regression()`: format options

```{r}
#| label: tbl_regression-bold
#| eval: false
tbl_regression(glyhb_model) |>
  add_glance_source_note() |>
  bold_p() |> #<<
  bold_labels() #<<
```

. . .

## `tbl_regression()`: format options

```{r}
#| label: tbl_regression-bold2
tbl_regression(glyhb_model) |>
  add_glance_source_note() |>
  bold_p() |>
  bold_labels()
```

. . .

## `tbl_regression()`: modify caption

```{r}
#| label: modify_caption
#| eval: false
tbl_regression(glyhb_model) |>
  add_glance_source_note() |>
  bold_p() |>
  bold_labels() |>
  modify_caption("**Association of BMI and A1c adjusted for age**") #<<
```

. . .

## `tbl_regression()`: modify caption

```{r}
#| label: modify_caption2
tbl_regression(glyhb_model) |>
  add_glance_source_note() |>
  bold_p() |>
  bold_labels() |>
  modify_caption("**Association of BMI and A1c adjusted for age**")
```

. . .

# Your turn 5

### Create a regression table for `response model`; exponentiate the output with `exponentiate = TRUE`
### Add a global P-value
### Add the model statistics via `add_glance_source_note()`
### Italicize the variable levels
### Merge the table you just made with `marker_table` using `tbl_merge()`

. . .

# Your turn 5

```{r}
#| label: rebuild-models
#| echo: false
#| message: false
#| warning: false
response_model <- glm(response ~ age + stage, data = trial, family = binomial)
marker_model <- lm(marker ~ trt + stage + age, data = trial)
```

```{r}
#| label: your-turn-5-no-run
#| eval: false
response_table <- response_model |>
  tbl_regression(
    exponentiate = TRUE
  ) |>
  add_global_p() |>
  add_glance_source_note() |>
  italicize_levels()

marker_table <- marker_model |>
  tbl_regression() |>
  add_global_p()

both_tables <- list(response_table, marker_table)
tbl_merge(both_tables)
```

. . .

# Your turn 5

```{r}
#| label: your-turn-5
#| echo: false
response_table <- response_model |>
  tbl_regression(
    exponentiate = TRUE
  ) |>
  add_global_p() |>
  add_glance_source_note() |>
  italicize_levels()

marker_table <- marker_model |>
  tbl_regression() |>
  add_global_p()

both_tables <- list(response_table, marker_table)
tbl_merge(both_tables)
```

. . .

## Cross-referencing tables

. . .

## A bookdown output format, e.g. **`bookdown::html_document2`**

. . .

## Cross-referencing tables

## ~~A bookdown output format, e.g. `bookdown::html_document2`~~
## A table caption (**`caption = "Table title"`**, **`modify_caption()`**)

. . .

## Cross-referencing tables

## ~~A bookdown output format, e.g. `bookdown::html_document2`~~
## ~~A table caption (`caption = "Table title"`, `modify_caption()`)~~
## A named code chunk (**`{r chunk-name}`**)

. . .

## Cross-referencing tables

## ~~A bookdown output format, e.g. `bookdown::html_document2`~~
## ~~A table caption (`caption = "Table title"`, `modify_caption()`)~~
## ~~A named code chunk (`{r chunk-name}`)~~
## Reference with **`\@ref(tab:chunk-name)`**

. . .


## *Your Turn 6*

### Modify the YAML header to use `bookdown::html_document2` as the output

### Add a caption to the merged table above using `modify_caption()`

### Reference that table below using this format: `\@ref(tab:name-of-chunk)`


. . .


# Your turn 6

```{r}
#| label: your-turn-code
#| eval: false
tbl_merge(both_tables) |>
  modify_caption(
    "Regression models of participant markets and response"
  )
```

. . .

# Your turn 6

```{r}
#| label: your-turn-6.png-2
#| out.width: 70%
#| echo: false
knitr::include_graphics("img/your-turn-6.png")
```

. . .

```{r}
#| label: your-turn-6-ref.png
#| out.width: 80%
#| echo: false
knitr::include_graphics("img/your-turn-6-ref.png")
```

. . .


# `gtsummary`: Output formats

<br>

```{r}
#| label: supported_formats.png
#| out.width: 70%
#| echo: false
knitr::include_graphics("img/supported_formats.png")
```

. . .

# Also check out the [`gt` package](https://gt.rstudio.com/)!

### "construct a wide variety of useful tables with a cohesive set of table parts"

```{r}
#| label: gt_parts_of_a_table.png
#| out.width: 70%
#| echo: false
knitr::include_graphics("img/gt_parts_of_a_table.png")
```

. . .

## Resources {background-color="#23373B"}
## [R Markdown Cookbook: Tables](https://bookdown.org/yihui/rmarkdown-cookbook/tables.html): A series of recipes using `kable()` and friends 
## [gtsummary Website](http://www.danieldsjoberg.com/gtsummary): Many vignettes to learn more about gtsummary
## [gt Website](https://gt.rstudio.com/): Vignettes and a short course on learning gt
